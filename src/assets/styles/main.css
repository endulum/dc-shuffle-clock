@font-face {
  font-family: 'Roboto Condensed';
  src: url(../fonts/RobotoCondensed-Regular.ttf);
}

@font-face {
  font-family: 'Roboto Condensed Bold';
  src: url(../fonts/RobotoCondensed-Bold.ttf);
}

:root {
  /* card */
  --extrusion: rgba(0, 0, 0, 0.4) 0px 2px 4px,
    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
  /* card when "levitating" */
  --extrusion-levitating: rgba(0, 0, 0, 0.4) 0px 5px 10px,
    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
  /* text above background */
  --text-shadow-1: rgba(0, 0, 0, 0.2) 0px 10px 20px,
    rgba(0, 0, 0, 0.25) 0px 6px 6px;
}

html,
body {
  width: 100%;
  height: 100%;
}

body {
  background-image: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0),
      rgba(0, 0, 0, 0.75)
    ),
    url(../images/alum.png);
  background-attachment: fixed;
  font-family: 'Roboto Condensed', Arial, Helvetica, sans-serif;
  overflow-x: auto;
}

b {
  font-weight: normal;
  font-family: 'Roboto Condensed Bold';
}

small {
  font-size: 0.875rem;
}

button {
  appearance: none;
  border: none;
}

main button {
  background-color: #fafbfc;
  border: 1px solid rgba(27, 31, 35, 0.15);
  border-radius: 5px;
  box-shadow: rgba(27, 31, 35, 0.04) 0 1px 0,
    rgba(255, 255, 255, 0.25) 0 1px 0 inset;
  padding: 0.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 35px;
  &:hover {
    background-color: #f3f4f6;
    cursor: pointer;
  }
  svg {
    fill: #444;
  }
  &:hover svg {
    fill: #222;
  }
}

input,
select {
  border: 1px solid rgba(0, 0, 0, 0.25);
  border-radius: 5px;
  padding: 0.25rem 0.375rem;
  font-size: 0.875rem;
  &:hover {
    border-color: black;
    cursor: pointer;
  }
}

input[type='number'] {
  margin: 0 0.25rem;
}
label {
  white-space: nowrap;
}

#root {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin: auto;
  max-width: 500px;
  padding: 2rem 1rem;
  gap: 1.5rem;
  container-type: inline-size;
  > * {
    width: 100%;
  }
}

.disabled,
[disabled] {
  pointer-events: none;
  opacity: 0.5;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/* clock */

.clock-button {
  margin-right: 0.5rem;
  width: 65px;
  min-width: 65px;
  height: 65px;
  border: none;
  border-radius: 5px;
  box-shadow: var(--extrusion);
  transition: 0.3s box-shadow ease, 0.3s transform ease,
    0.5s background-color ease;
  cursor: pointer;
  svg {
    width: 100%;
    height: 100%;
    fill: white;
  }
  &:hover {
    box-shadow: var(--extrusion-levitating);
    transform: translateY(-3px);
  }
  &:active {
    box-shadow: var(--extrusion);
    transform: translateY(0px);
  }
  &.playing {
    background-color: crimson;
  }
  &.pausing,
  &.alerting {
    background-color: deepskyblue;
  }
  &.alerting svg {
    animation: spin 2s ease;
  }
}

@keyframes spin {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}

.clock-digits {
  line-height: 0;
  font-family: Arial, Helvetica, sans-serif;
  font-weight: bold;
  font-size: 4rem;
  text-shadow: var(--text-shadow-1);
  color: white;
  &::before {
    content: ':';
  }
}

/* main */

main {
  background-color: white;
  box-shadow: var(--extrusion);
  border-radius: 5px;
  padding: 1rem;
}

.switch {
  position: relative;
  height: 35px;
  border-radius: 5px;
  input[type='checkbox'] {
    position: absolute;
    opacity: 0;
  }
}

.switch:not(.unhoverable) {
  &:has(> input[type='checkbox']:focus),
  &:has(> input[type='checkbox']:focus-visible),
  &:hover {
    cursor: pointer;
    background-color: #eee;
    box-shadow: rgba(0, 0, 0, 0.25) 0 0 1px inset;
  }
}

.switch-toggle {
  background-color: crimson;
  position: relative;
  display: inline-block;
  width: 50px;
  height: 26px;
  border-radius: 40px;
  transition: background-color 0.5s ease;
  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px inset;
  overflow: hidden;
  &::after {
    position: relative;
    content: '';
    top: 3px;
    left: 4px;
    display: inline-block;
    width: 20px;
    height: 20px;
    border-radius: 100%;
    background-color: white;
    box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px;
    transition: transform 0.5s ease;
  }
  &.on {
    background-color: deepskyblue;
    &::after {
      transform: translateX(22px);
    }
  }
}

.setting {
  display: grid;
  grid-template-columns: 35px 1fr;
}

.setting-play {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 35px;
  padding: 0.25rem;
  svg {
    width: 100%;
    height: 100%;
    flex-shrink: 0;
  }
}

.setting-body-wrapper {
  grid-column: 1 / 3;
  display: grid;
  grid-template-rows: 0fr;
  transition: grid-template-rows 0.5s ease;
  &.open {
    grid-template-rows: 1fr;
  }
}

.setting-body {
  overflow: hidden;
  margin-bottom: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.125rem;
  display: flex;
  flex-direction: column;
  border-top: 1px solid rgba(0, 0, 0, 0.125);
  gap: 0.5rem;
  > * {
    width: 100%;
  }
}

.setting:last-of-type .setting-body {
  margin-bottom: 0;
}

.sound-grid {
  display: grid;
  grid-template-columns: auto 1fr;
  row-gap: 0.5rem;
  column-gap: 0.5rem;
  align-items: center;
  [type='radio'] {
    grid-column: 1 / 2;
  }
  *:not(small, [type='radio']) {
    grid-column: 2 / 3;
  }
  small {
    grid-column: 2 / 4;
  }
}

/* footer */

footer {
  color: white;
  a {
    color: white;
    font-family: 'Roboto Condensed Bold', Arial, Helvetica, sans-serif;
  }
}

.footer-links {
  button,
  [type='button'] {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 99px;
    background-color: rgba(0, 0, 0, 0.25);
    color: white;
    cursor: pointer;
    transition: background-color 0.25s ease;
    &:focus,
    &:hover {
      background-color: rgba(0, 0, 0, 0.5);
    }
    svg {
      width: 25px;
      height: 25px;
      margin-bottom: 1px;
      fill: white;
    }
    &:has(small) {
      width: auto;
      padding: 0 0.75rem;
    }
  }
}

/* error */

.error {
  background-color: oklch(from crimson calc(l + 0.5) c h);
  color: oklch(from crimson calc(l - 0.25) c h);
  border-radius: 5px;
  button {
    width: 35px;
    height: 35px;
    appearance: none;
    background: none;
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 5px;
    &:hover {
      cursor: pointer;
      background-color: oklch(from crimson calc(l + 0.25) c h);
    }
  }
  svg {
    fill: oklch(from crimson calc(l - 0.25) c h);
  }
  p {
    margin-top: 0.375rem;
  }
}

/* modal */

.ReactModal__Overlay {
  opacity: 0;
  transition: opacity 0.25s ease-in-out;
}

.ReactModal__Overlay--after-open {
  opacity: 1;
}

.ReactModal__Overlay--before-close {
  opacity: 0;
}

.ReactModal__Content {
  > * + * {
    margin-bottom: 0.5rem;
  }
  button {
    cursor: pointer;
    background-color: transparent;
    border-radius: 5px;
    &:hover {
      background-color: rgba(0, 0, 0, 0.05);
    }
  }
  ul {
    list-style: square;
    padding-left: 1.25rem;
  }
}

.faq {
  button {
    padding: 0.125rem 0.5rem;
    width: 100%;
    text-align: left;
  }
}

.faq-item {
  display: grid;
  grid-template-columns: auto 1fr;
  align-items: start;
  margin-bottom: 0.25rem;
  dt,
  dd {
    grid-column: 2 / 3;
  }
  dd {
    margin-left: 0.5rem;
    margin-top: 0.25rem;
  }
  dt:last-of-type {
    margin-bottom: 0;
  }
}

/* container */

@container (min-width: calc(450px)) {
  .clock-digits {
    font-size: 5rem;
  }

  .clock-button {
    width: 80px;
    height: 80px;
    padding: 0.75rem;
  }

  .setting-body-wrapper {
    grid-column: 2 / 3;
  }

  .setting {
    .setting-body {
      margin-left: 0.5rem;
    }
  }

  .sound-grid {
    grid-template-columns: auto auto 1fr;
    *:not(small, [type='radio']) {
      grid-column: auto;
    }
  }
}
